{"version":3,"sources":["contexts/Step1ConText.js","components/Step1.js","components/Step2.js","components/Step3.js","components/Step4.js","components/Submit.js","App.js","serviceWorker.js","index.js"],"names":["Step1Context","React","createContext","Step1Provider","props","state","meal","people","restaurant","cart","restaurantChoose","set","bind","setRestaurant","setCart","setRestaurantChoose","m","p","this","setState","r","item","index","items","map","it","i","dish","concat","count","Provider","value","data","children","Component","useState","setMeal","number","setNumber","useContext","Container","Form","FormGroup","Label","for","Input","type","id","onChange","e","target","max","min","parseInt","to","url","Button","onClick","alert","vali","res","setRes","restaurantName","setRestaurantName","useEffect","a","axios","get","getData","listRestaurant","filter","availableMeals","indexOf","b","Set","key","className","resChoose","length","setDish","setCount","name","defaultValue","Table","dark","App","exact","path","Step1","Step2","Step3","Step4","Submit","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.975d9bf3.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n\r\nexport const Step1Context = React.createContext();\r\nexport class Step1Provider extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            meal:\"\",\r\n            people:0,\r\n            restaurant:[],\r\n            cart:[],\r\n            restaurantChoose:\"\"\r\n        }\r\n        this.set = this.set.bind(this);\r\n        this.setRestaurant = this.setRestaurant.bind(this);\r\n        this.setCart = this.setCart.bind(this);\r\n        this.setRestaurantChoose = this.setRestaurantChoose.bind(this);\r\n    } \r\n\r\n    set(m,p){\r\n        this.setState({\r\n            meal:m,\r\n            people:p\r\n        })\r\n    }\r\n    setRestaurant(r){\r\n        this.setState({\r\n            restaurant:r\r\n        })\r\n    }\r\n    setCart(item){\r\n        let index = -1;\r\n        let items = [...this.state.cart];\r\n        items.map((it,i)=>{\r\n            if(it.dish===item.dish){\r\n                index =i;\r\n            }\r\n        })\r\n        if(index===-1){\r\n            this.setState({\r\n                cart: this.state.cart.concat(item)\r\n            })\r\n        }else\r\n       {\r\n           items[index].count += item.count;\r\n           this.setState({\r\n               cart:items\r\n           })\r\n       }\r\n    }\r\n    setRestaurantChoose(restaurant){\r\n        this.setState({restaurantChoose:restaurant.restaurant})\r\n    }\r\n    render(){\r\n        return(\r\n            <Step1Context.Provider value = {\r\n                {data:this.state.data,\r\n                meal:this.state.meal,\r\n                people:this.state.people,\r\n                restaurant:this.state.restaurant,\r\n                cart:this.state.cart,\r\n                restaurantChoose:this.state.restaurantChoose,\r\n                set:this.set,\r\n                setRestaurant:this.setRestaurant,\r\n                setCart:this.setCart,\r\n                setRestaurantChoose:this.setRestaurantChoose\r\n                }}>\r\n                {this.props.children}\r\n            </Step1Context.Provider>\r\n        )\r\n    }\r\n}","import React,{useContext, useState} from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Container} from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Step1Context} from '../contexts/Step1ConText';\r\nexport default function(){\r\n            const [meal,setMeal] = useState(\"\");\r\n            const [number,setNumber] = useState(\"\");\r\n            const {set} = useContext(Step1Context);\r\n            const vali = (meal,number) =>{\r\n                if(meal===\"\"||number <1)\r\n                    {\r\n                        alert(\"Hãy nhập đủ cả 2 trường\")\r\n                        return;\r\n                    }\r\n                else if(number>10){\r\n                    alert(\"số người phải nhỏ hơn 10\")\r\n                    return;\r\n                }\r\n                else{\r\n                    set(meal,number);\r\n                }\r\n            }\r\n            const url = (meal,number) =>{\r\n                if(meal===\"\"||number <1||number>10)\r\n                    {\r\n                        \r\n                        return \"\";\r\n                    }\r\n                    return \"/step2\";\r\n               \r\n            }\r\n    return(\r\n        <Container>\r\n            <div>\r\n            <Form>\r\n                \r\n                <FormGroup>\r\n                    <Label for=\"selectMeal\">Please select a meal</Label>\r\n                    <Input \r\n                    type=\"select\"\r\n                    id=\"selectMeal\"\r\n                    onChange={(e)=>{setMeal(e.target.value)}}>\r\n                    <option></option>\r\n                    <option>breakfast</option>\r\n                    <option>lunch</option>\r\n                    <option>dinner</option>\r\n                    </Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label >Please enter number of people</Label>\r\n                    <Input type=\"number\" max=\"10\" min=\"1\" onChange={(e)=>{setNumber(parseInt(e.target.value))}}>\r\n                    </Input>\r\n                </FormGroup>\r\n                <Link to={()=>url(meal,number)}><Button onClick={()=> {\r\n                    vali(meal,number)\r\n                    \r\n                }} > Next</Button></Link>\r\n            </Form>\r\n            </div>\r\n        </Container>\r\n        \r\n    )\r\n}","import React,{useState,useEffect, useContext} from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Container} from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {Step1Context} from '../contexts/Step1ConText'\r\nexport default function(){\r\n    const [res,setRes] = useState([]);\r\n    const [restaurantName,setRestaurantName] = useState(\"\");\r\n    useEffect(() => {\r\n       async function getData(){\r\n           let a = await axios.get('https://i51dt.sse.codesandbox.io/dishes')\r\n            let data = await a.data;\r\n            setRes(data);\r\n       }\r\n       getData();\r\n      },[]);\r\n        const {meal,setRestaurant,setRestaurantChoose} = useContext(Step1Context);\r\n        const listRestaurant =  res.filter((restaurant) => {\r\n               return restaurant.availableMeals.indexOf(meal)!==-1;  \r\n           })\r\n        let b = listRestaurant.map((item) => item.restaurant);\r\n        b = [...new Set(b)];\r\n        const getRestaurant = () =>{  if(restaurantName===\"\"){\r\n            alert(\"Hãy chọn trường dữ liệu\")\r\n            return [];\r\n        }\r\n            let restaurantChoose =  listRestaurant.filter(item =>{\r\n            return item.restaurant.indexOf(restaurantName)!==-1\r\n            })\r\n        return restaurantChoose;\r\n    }\r\n    const url = (resName) =>{\r\n        if(resName===\"\")\r\n            {\r\n                return \"/step2\";\r\n            }\r\n            return \"/step3\";\r\n       \r\n    }\r\n    return(\r\n        <Container>\r\n            <div>\r\n            <Form>\r\n                \r\n                <FormGroup>\r\n                    <Label for=\"exampleSelect\">Please select a restaurant</Label>\r\n                    <Input type=\"select\" value={restaurantName} onChange={(e)=>{setRestaurantName(e.target.value)}}>\r\n                        <option></option>\r\n                        {b.map((res,index) =><option key={index}>{res}</option>)}\r\n                    </Input>\r\n                </FormGroup>\r\n                <Link to=\"/\" className=\"mr-4\"><Button> Previous </Button></Link>\r\n                <Link to={()=>url(restaurantName)}>\r\n                    <Button onClick={()=> { \r\n                    let resChoose = getRestaurant()\r\n                    if(resChoose.length!==0){\r\n                        setRestaurant(resChoose)\r\n                    setRestaurantChoose(resChoose[0])\r\n                    }\r\n                    }}> Next \r\n                    </Button>\r\n                </Link>\r\n            </Form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}","import React,{useState, useContext} from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Container,Table } from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Step1Context} from '../contexts/Step1ConText'\r\nexport default function(){\r\n    const [dish,setDish] = useState(\"\");\r\n    const [count,setCount] = useState(1);\r\n    \r\n    const {restaurant,cart,setCart,people} = useContext(Step1Context);\r\n    const url = (dish,count) =>{\r\n        if(dish===\"\"||count<0||count<people||count>10||cart.length===0)\r\n            {\r\n                return \"/step3\";\r\n            }\r\n            return \"/step4\";\r\n    }\r\n    const vali = (dish,count) =>{\r\n        if(dish===\"\"||count<0||count<people||count>10){\r\n            alert(\"Hãy chọn trường,số lượng phải nhỏ hơn 10 và lớn hơn số người ăn\")\r\n        }\r\n        else{\r\n            setCart({dish,count})\r\n        }\r\n    }\r\n    return(\r\n        <Container>\r\n            <div>\r\n            <Form>\r\n                <FormGroup>\r\n                    <Label for=\"exampleSelect\">Please select a dish</Label>\r\n                    <Input type=\"select\"  onChange={(e)=> setDish(e.target.value)}>\r\n                        <option></option>\r\n                        {restaurant.map(res=> (<option>{res.name}</option>))}\r\n                    </Input>\r\n                    <Label for=\"exampleSelect\">Please enter no. of serving</Label>\r\n                    <Input type=\"number\" defaultValue={count}  onChange={(e)=> setCount(parseInt(e.target.value))}>\r\n                    </Input>\r\n                    \r\n                </FormGroup>\r\n                <Button onClick={() => vali(dish,count)}>Add</Button>\r\n            </Form>\r\n            <Table dark className=\"mt-3\">\r\n                <thead>\r\n                    <tr>\r\n                    <th>#</th>\r\n                    <th>Tên món</th>\r\n                    <th>Số lượng</th>\r\n                    </tr>\r\n                </thead><tbody></tbody>\r\n                <tfoot>\r\n                  {cart.map((item,index)=>(<tr key={index}>\r\n                      <td>{index+1}</td>\r\n                      <td>{item.dish}</td>\r\n                      <td>{item.count}</td>\r\n                  </tr>))}\r\n                </tfoot>\r\n            </Table>\r\n            <Link to=\"/step2\" className=\"mr-4\"><Button> Previous </Button></Link>\r\n            <Link to={()=>url(dish,count)}><Button> Next </Button></Link>\r\n            </div>\r\n        </Container>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport {Container,Button} from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Step1Context} from '../contexts/Step1ConText'\r\nexport default function(){\r\n    const {restaurantChoose,cart,meal,people} = useContext(Step1Context);\r\n    return(\r\n        <Container>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    Meal\r\n                </div>\r\n                <div className=\"col-md-8\">{meal}</div>\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    No of People\r\n                </div>\r\n                <div className=\"col-md-8\">{people}</div>\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    Restaurant\r\n                </div>\r\n                <div className=\"col-md-8\">{restaurantChoose}</div>\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    Dishes\r\n                </div>\r\n                <div className=\"col-md-8\">{cart.map(item => (<p>{item.dish}&emsp;{item.count}</p>))}</div>\r\n            </div>\r\n            <div className=\"mt-4\">    \r\n                <Link to=\"/step3\" className=\"mr-4\"><Button> Previous </Button></Link>\r\n                <Link to=\"/Sub\"><Button> Submit </Button></Link>\r\n            </div>\r\n        </Container>\r\n       \r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport {Container} from 'reactstrap';\r\nimport {Step1Context} from '../contexts/Step1ConText'\r\nexport default function(){\r\n    const {restaurantChoose,cart,meal,people} = useContext(Step1Context);\r\n    return(\r\n        <Container>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    Meal\r\n                </div>\r\n                <div className=\"col-md-8\">{meal}</div>\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    No of People\r\n                </div>\r\n                <div className=\"col-md-8\">{people}</div>\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    Restaurant\r\n                </div>\r\n                <div className=\"col-md-8\">{restaurantChoose}</div>\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    Dishes\r\n                </div>\r\n                <div className=\"col-md-8\">{cart.map(item => (<p>{item.dish}&emsp;{item.count}</p>))}</div>\r\n            </div>\r\n            <div className=\"mt-4\">    \r\n            </div>\r\n        </Container>\r\n       \r\n    )\r\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport './App.css';\nimport Step1 from './components/Step1';\nimport Step2 from './components/Step2';\nimport Step3 from './components/Step3';\nimport Step4 from './components/Step4';\nimport Submit from './components/Submit'\nimport {Step1Provider} from './contexts/Step1ConText';\nfunction App() {\n  return (\n    <Step1Provider>\n      <Router>\n          <div className=\"App\">\n        \n        <Switch>\n            <Route exact path=\"/\">\n            <Step1 />\n            </Route>\n            <Route  path=\"/step2\">\n            <Step2 />\n            </Route>\n            <Route  path=\"/step3\">\n            <Step3 />\n            </Route>\n            <Route  path=\"/step4\">\n            <Step4 />\n            </Route>\n            <Route  path=\"/sub\">\n            <Submit />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </Step1Provider>\n     \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}